#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç –û—Ç–ª–∞–¥–∫–∞ Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firebase
function checkFirebaseConfig() {
  console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firebase:');

  const firebaseConfigPath = path.join(process.cwd(), 'src/boot/firebase.ts');
  if (fs.existsSync(firebaseConfigPath)) {
    const config = fs.readFileSync(firebaseConfigPath, 'utf8');

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    const apiKeyMatch = config.match(/apiKey:\s*['"]([^'"]+)['"]/);
    const projectIdMatch = config.match(/projectId:\s*['"]([^'"]+)['"]/);
    const storageBucketMatch = config.match(/storageBucket:\s*['"]([^'"]+)['"]/);
    const authDomainMatch = config.match(/authDomain:\s*['"]([^'"]+)['"]/);

    if (apiKeyMatch) console.log(`   ‚úÖ API Key: ${apiKeyMatch[1].substring(0, 10)}...`);
    if (projectIdMatch) console.log(`   ‚úÖ Project ID: ${projectIdMatch[1]}`);
    if (storageBucketMatch) console.log(`   ‚úÖ Storage Bucket: ${storageBucketMatch[1]}`);
    if (authDomainMatch) console.log(`   ‚úÖ Auth Domain: ${authDomainMatch[1]}`);

    console.log('');
  } else {
    console.log('   ‚ùå –§–∞–π–ª firebase.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª Storage
function checkStorageRules() {
  console.log('üõ°Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ Storage Rules:');

  const storageRulesPath = path.join(process.cwd(), 'storage.rules');
  if (fs.existsSync(storageRulesPath)) {
    console.log('   ‚úÖ –§–∞–π–ª storage.rules –Ω–∞–π–¥–µ–Ω');
    const rules = fs.readFileSync(storageRulesPath, 'utf8');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞
    if (rules.includes('pepper-photos')) {
      console.log('   ‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è pepper-photos –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
    if (rules.includes('allow read: if true')) {
      console.log('   ‚úÖ –ß—Ç–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –¥–ª—è –≤—Å–µ—Ö');
    }
    if (rules.includes('request.auth != null')) {
      console.log('   ‚úÖ –ó–∞–ø–∏—Å—å —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
  } else {
    console.log('   ‚ùå –§–∞–π–ª storage.rules –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  console.log('');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ Firestore –ø—Ä–∞–≤–∏–ª
function checkFirestoreRules() {
  console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ Firestore Rules:');

  const firestoreRulesPath = path.join(process.cwd(), 'firestore.rules');
  if (fs.existsSync(firestoreRulesPath)) {
    console.log('   ‚úÖ –§–∞–π–ª firestore.rules –Ω–∞–π–¥–µ–Ω');
    const rules = fs.readFileSync(firestoreRulesPath, 'utf8');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
    if (rules.includes('peppers')) {
      console.log('   ‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ peppers –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
    if (rules.includes('varieties_v2')) {
      console.log('   ‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ varieties_v2 –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
  } else {
    console.log('   ‚ùå –§–∞–π–ª firestore.rules –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  console.log('');
}

// –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ CORS
function analyzeCorsIssues() {
  console.log('üåê –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º CORS:');
  console.log('   üìç –ß–∞—Å—Ç—ã–µ –ø—Ä–∏—á–∏–Ω—ã CORS –æ—à–∏–±–æ–∫:');
  console.log('      ‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è CORS –≤ Firebase Storage');
  console.log('      ‚Ä¢ –î–æ–º–µ–Ω –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Authorized domains (Firebase Console)');
  console.log('      ‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ Storage Rules');
  console.log('      ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å preflight OPTIONS –∑–∞–ø—Ä–æ—Å–∞–º–∏');
  console.log('');

  console.log('   üîß –°–ø–æ—Å–æ–±—ã —Ä–µ—à–µ–Ω–∏—è:');
  console.log('      1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ CORS: npm run firebase:fix-cors');
  console.log(
    '      2. –î–æ–±–∞–≤—å—Ç–µ –¥–æ–º–µ–Ω –≤ Firebase Console > Authentication > Settings > Authorized domains',
  );
  console.log('      3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Storage Rules –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å');
  console.log('      4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Firebase Admin SDK –¥–ª—è server-side –æ–ø–µ—Ä–∞—Ü–∏–π');
  console.log('');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
function checkNetworkRequests() {
  console.log('üåç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Ç–ª–∞–¥–∫–µ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:');
  console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ DevTools (F12) > Network tab');
  console.log('   2. –§–∏–ª—å—Ç—Ä—É–π—Ç–µ –ø–æ "firebase" –∏–ª–∏ "googleapis"');
  console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ –æ—Ç–≤–µ—Ç–æ–≤:');
  console.log('      ‚Ä¢ 200 - —É—Å–ø–µ—à–Ω–æ');
  console.log('      ‚Ä¢ 403 - –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏/–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π');
  console.log('      ‚Ä¢ 404 - —Ñ–∞–π–ª/endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω');
  console.log('      ‚Ä¢ CORS error - –ø—Ä–æ–±–ª–µ–º—ã —Å CORS');
  console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Headers –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö');
  console.log('');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function checkEnvironment() {
  console.log('üèóÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏:');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
  const packagePath = path.join(process.cwd(), 'package.json');
  if (fs.existsSync(packagePath)) {
    const pkg = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
    console.log(`   üì¶ –ü—Ä–æ–µ–∫—Ç: ${pkg.name} v${pkg.version}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    const deps = { ...pkg.dependencies, ...pkg.devDependencies };
    if (deps.firebase) {
      console.log(`   üî• Firebase: ${deps.firebase}`);
    }
    if (deps['firebase-admin']) {
      console.log(`   üîß Firebase Admin: ${deps['firebase-admin']}`);
    }
    if (deps['firebase-tools']) {
      console.log(`   üõ†Ô∏è  Firebase Tools: ${deps['firebase-tools']}`);
    }
  }

  console.log(`   üåê Node.js: ${process.version}`);
  console.log(`   üìÅ Working Directory: ${process.cwd()}`);
  console.log('');
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
function securityRecommendations() {
  console.log('üîí –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
  console.log('   1. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ API –∫–ª—é—á–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');
  console.log('   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å–µ–∫—Ä–µ—Ç–æ–≤');
  console.log('   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ Firebase Rules');
  console.log('   4. –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –¥–æ–º–µ–Ω—ã –≤ Firebase Console');
  console.log('   5. –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
  console.log('');
}

// –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
function usefulCommands() {
  console.log('üõ†Ô∏è  –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
  console.log('   ‚Ä¢ npm run firebase:fix-cors - –∏—Å–ø—Ä–∞–≤–∏—Ç—å CORS');
  console.log('   ‚Ä¢ npm run perf:check - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
  console.log('   ‚Ä¢ firebase deploy - —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø—Ä–æ–µ–∫—Ç');
  console.log('   ‚Ä¢ firebase serve - –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä');
  console.log('   ‚Ä¢ firebase login - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
  console.log('   ‚Ä¢ firebase projects:list - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤');
  console.log('');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  checkEnvironment();
  checkFirebaseConfig();
  checkStorageRules();
  checkFirestoreRules();
  analyzeCorsIssues();
  checkNetworkRequests();
  securityRecommendations();
  usefulCommands();

  console.log('‚ú® –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Firebase Console.');
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main();

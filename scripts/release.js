#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º package.json
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
const currentVersion = packageJson.version;

console.log(`üöÄ Current version: ${currentVersion}`);

// –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø —Ä–µ–ª–∏–∑–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const releaseType = process.argv[2];
if (!releaseType || !['patch', 'minor', 'major'].includes(releaseType)) {
  console.error('‚ùå Please specify release type: patch, minor, or major');
  console.log('Usage: npm run release:patch|minor|major');
  process.exit(1);
}

// –†–∞–∑–±–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏—é –Ω–∞ —á–∞—Å—Ç–∏
const [major, minor, patch] = currentVersion.split('.').map(Number);

// –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
let newVersion;
switch (releaseType) {
  case 'patch':
    newVersion = `${major}.${minor}.${patch + 1}`;
    break;
  case 'minor':
    newVersion = `${major}.${minor + 1}.0`;
    break;
  case 'major':
    newVersion = `${major + 1}.0.0`;
    break;
}

console.log(`üì¶ New version: ${newVersion}`);

try {
  // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –≤ package.json
  packageJson.version = newVersion;
  fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2) + '\n');
  console.log('‚úÖ Updated package.json');

  // –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–µ–π
  execSync('git add package.json', { stdio: 'inherit' });
  execSync(`git commit -m "chore: bump version to ${newVersion}"`, { stdio: 'inherit' });
  console.log('‚úÖ Created version commit');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ–≥
  execSync(`git tag -a v${newVersion} -m "Version ${newVersion}"`, { stdio: 'inherit' });
  console.log('‚úÖ Created git tag');

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
  execSync('git push origin HEAD', { stdio: 'inherit' });
  execSync(`git push origin v${newVersion}`, { stdio: 'inherit' });
  console.log('‚úÖ Pushed to remote');

  console.log(`üéâ Release ${newVersion} created successfully!`);
  console.log('üìã Next steps:');
  console.log('   1. Update CHANGELOG.md with new features');
  console.log('   2. Review the GitHub release');
  console.log('   3. Deploy to production if needed');
} catch (error) {
  console.error('‚ùå Error creating release:', error.message);
  process.exit(1);
}

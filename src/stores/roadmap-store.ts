import { defineStore } from 'pinia';
import { ref, computed } from 'vue';
import {
  collection,
  addDoc,
  updateDoc,
  deleteDoc,
  doc,
  query,
  where,
  orderBy,
  onSnapshot,
  Timestamp,
} from 'firebase/firestore';
import { db } from 'src/boot/firebase';
import { useUserStore } from './user-store';
import type { RoadmapItem } from 'src/components/models';

type RoadmapUpdate = Omit<RoadmapItem, 'id' | 'createdAt' | 'assignee' | 'updatedAt'>;

export const useRoadmapStore = defineStore('roadmap', () => {
  const items = ref<RoadmapItem[]>([]);
  const loading = ref(false);
  const error = ref<string | null>(null);
  let unsubscribe: (() => void) | null = null;

  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
  const currentPage = ref(1);
  const itemsPerPage = ref(12);
  const totalPages = computed(() => Math.ceil(items.value.length / itemsPerPage.value));

  const userStore = useUserStore();

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const fetchItems = async () => {
    console.log('=== –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã ===');

    loading.value = true;
    error.value = null;

    try {
      console.log('üóÑÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firestore...');

      if (!db) {
        throw new Error('Firestore –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }

      console.log('‚úÖ Firestore –ø–æ–¥–∫–ª—é—á–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å...');

      // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–ª—É—à–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      if (unsubscribe) {
        console.log('üîÑ –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–ª—É—à–∞—Ç–µ–ª—è');
        unsubscribe();
        unsubscribe = null;
      }

      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã (–ø—É–±–ª–∏—á–Ω–∞—è –¥–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞)
      const q = query(
        collection(db, 'roadmap'),
        orderBy('createdAt', 'desc'), // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è
      );

      console.log('üîç –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ roadmap (–≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã)...');

      // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
      unsubscribe = onSnapshot(
        q,
        (querySnapshot) => {
          console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è, –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', querySnapshot.size);
          console.log('üîÑ –¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏–π: onSnapshot callback –≤—ã–∑–≤–∞–Ω');

          const newItems = querySnapshot.docs.map((doc) => {
            const data = doc.data();
            console.log('üìÑ –î–æ–∫—É–º–µ–Ω—Ç:', doc.id, '=>', data);
            return {
              id: doc.id,
              ...data,
            };
          }) as RoadmapItem[];

          console.log('üîÑ –°—Ç–∞—Ä–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', items.value.length);
          console.log('üîÑ –ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', newItems.length);
          console.log(
            'üîÑ –≠–ª–µ–º–µ–Ω—Ç—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å:',
            JSON.stringify(items.value) !== JSON.stringify(newItems),
          );

          items.value = newItems;

          console.log('‚úÖ –≠–ª–µ–º–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏:', items.value.length);
          loading.value = false;
        },
        (err) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π:', err);
          error.value = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π: ${err.message}`;
          loading.value = false;
        },
      );

      console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏:', err);
      console.error('‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏:', typeof err);
      console.error(
        '‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:',
        err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      );
      console.error('‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', err instanceof Error ? err.stack : '–ù–µ—Ç —Å—Ç–µ–∫–∞');

      error.value = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
      loading.value = false;
    }

    console.log('=== –ö–æ–Ω–µ—Ü –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã ===');
  };

  // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
  const addItem = async (item: Omit<RoadmapItem, 'id' | 'createdAt' | 'updatedAt'>) => {
    console.log('=== –ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã ===');

    if (!userStore.user) {
      error.value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω';
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return null;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (userStore.user.email !== 'lowdog136@gmail.com') {
      error.value = '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã';
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:', userStore.user.email);
      return null;
    }

    console.log(
      '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:',
      userStore.user.email,
    );
    console.log('üìù –ò—Å—Ö–æ–¥–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç:', item);

    loading.value = true;
    error.value = null;

    try {
      const now = new Date().toISOString();
      const newItem = {
        ...item,
        assignee: userStore.user.email!,
        createdAt: now,
        updatedAt: now,
        // –£–±–∏—Ä–∞–µ–º undefined –∑–Ω–∞—á–µ–Ω–∏—è
        targetVersion: item.targetVersion || null,
        notes: item.notes || null,
        estimatedEffort: item.estimatedEffort || null,
      };

      console.log('üîß –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è Firestore:', newItem);
      console.log('üóÑÔ∏è –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firestore...');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firestore
      if (!db) {
        throw new Error('Firestore –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }

      console.log('‚úÖ Firestore –ø–æ–¥–∫–ª—é—á–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç...');

      const docRef = await addDoc(collection(db, 'roadmap'), newItem);
      console.log('‚úÖ –≠–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω —Å ID:', docRef.id);

      // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ä—É—á–Ω—É—é - —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç onSnapshot
      console.log('‚úÖ –≠–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ Firestore, –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

      const createdItem: RoadmapItem = {
        id: docRef.id,
        ...newItem,
      };

      return createdItem;
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞:', err);
      console.error('‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏:', typeof err);
      console.error(
        '‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:',
        err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      );
      console.error('‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', err instanceof Error ? err.stack : '–ù–µ—Ç —Å—Ç–µ–∫–∞');

      error.value = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
      return null;
    } finally {
      loading.value = false;
      console.log('=== –ö–æ–Ω–µ—Ü –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã ===');
    }
  };

  // –û–±–Ω–æ–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
  const updateItem = async (id: string, updates: RoadmapUpdate) => {
    console.log('=== –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã ===');
    console.log('üÜî ID —ç–ª–µ–º–µ–Ω—Ç–∞:', id);
    console.log('üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updates);

    if (!userStore.user) {
      error.value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω';
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (userStore.user.email !== 'lowdog136@gmail.com') {
      error.value = '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã';
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:', userStore.user.email);
      return;
    }

    console.log(
      '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:',
      userStore.user.email,
    );

    loading.value = true;
    error.value = null;

    try {
      const updateData = {
        ...updates,
        updatedAt: new Date().toISOString(),
        targetVersion: updates.targetVersion || null,
        notes: updates.notes || null,
        estimatedEffort: updates.estimatedEffort || null,
      };

      if (updates.status === 'completed' && !updates.completedAt) {
        updateData.completedAt = new Date().toISOString();
      }

      console.log('üîß –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateData);
      console.log('üóÑÔ∏è –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firestore...');

      if (!db) {
        throw new Error('Firestore –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }

      console.log('‚úÖ Firestore –ø–æ–¥–∫–ª—é—á–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç...');

      await updateDoc(doc(db, 'roadmap', id), updateData);
      console.log('‚úÖ –≠–ª–µ–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Firestore, –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

      // –í—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      const updatedItemIndex = items.value.findIndex((item) => item.id === id);
      if (updatedItemIndex !== -1) {
        console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...');
        const item = items.value[updatedItemIndex];
        if (item) {
          item.title = updateData.title;
          item.description = updateData.description;
          item.category = updateData.category;
          item.priority = updateData.priority;
          item.status = updateData.status;
          item.estimatedEffort = updateData.estimatedEffort;
          item.targetVersion = updateData.targetVersion;
          item.notes = updateData.notes;
          item.updatedAt = updateData.updatedAt;
          if (updateData.completedAt) {
            item.completedAt = updateData.completedAt;
          }
          console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
        }
      } else {
        console.log('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
      }

      // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ä—É—á–Ω—É—é - —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç onSnapshot
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞:', err);
      console.error('‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏:', typeof err);
      console.error(
        '‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:',
        err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      );
      console.error('‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', err instanceof Error ? err.stack : '–ù–µ—Ç —Å—Ç–µ–∫–∞');

      error.value = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
    } finally {
      loading.value = false;
      console.log('=== –ö–æ–Ω–µ—Ü –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã ===');
    }
  };

  // –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
  const deleteItem = async (id: string) => {
    if (!userStore.user) {
      error.value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω';
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (userStore.user.email !== 'lowdog136@gmail.com') {
      error.value = '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã';
      return;
    }

    loading.value = true;
    error.value = null;

    try {
      await deleteDoc(doc(db, 'roadmap', id));
      console.log('‚úÖ –≠–ª–µ–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω –∏–∑ Firestore, –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

      // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ä—É—á–Ω—É—é - —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç onSnapshot
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞:', err);
      error.value = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞';
    } finally {
      loading.value = false;
    }
  };

  // –°–æ–∑–¥–∞—Ç—å –æ–¥–∏–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
  const createTestItem = async () => {
    if (!userStore.user) {
      error.value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω';
      return null;
    }

    const testItem = {
      title: '–¢–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã',
      description: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã',
      category: 'feature' as const,
      priority: 'medium' as const,
      status: 'planned' as const,
      assignee: userStore.user.email!,
      targetVersion: null,
      notes: '–¢–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç',
      estimatedEffort: null,
    };

    return await addItem(testItem);
  };

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  const debugAllItems = async () => {
    console.log('=== DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ roadmap ===');

    try {
      if (!db) {
        throw new Error('Firestore –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }

      const { collection, getDocs } = await import('firebase/firestore');

      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
      const querySnapshot = await getDocs(collection(db, 'roadmap'));

      console.log('üìä –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ roadmap:', querySnapshot.size);

      querySnapshot.docs.forEach((doc) => {
        const data = doc.data();
        console.log('üìÑ –î–æ–∫—É–º–µ–Ω—Ç ID:', doc.id);
        console.log('üìÑ –î–∞–Ω–Ω—ã–µ:', data);
        console.log('üìÑ assignee:', data.assignee);
        console.log('üìÑ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userStore.user?.email);
        console.log('---');
      });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ:', error);
    }
  };

  // –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã
  const createSampleItems = async () => {
    console.log('=== –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã ===');

    const sampleItems = [
      {
        title: '–ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
        description: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É –∫–Ω–æ–ø–∫–æ–≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö –ø–µ—Ä—Ü–µ–≤ –∏ —Å–æ—Ä—Ç–æ–≤',
        priority: 'high' as const,
        status: 'planned' as const,
        category: 'bugfix' as const,
        targetVersion: '1.1.0',
        notes: '–ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
        estimatedEffort: 'medium' as const,
      },
      {
        title: '–°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
        description: '–û—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Ü–µ–≤ –∏ —Å–æ—Ä—Ç–æ–≤',
        priority: 'medium' as const,
        status: 'planned' as const,
        category: 'feature' as const,
        targetVersion: '1.2.0',
        notes: '–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ –ø–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–º—É',
        estimatedEffort: 'medium' as const,
      },
      {
        title: '–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã—Ä–∞—â–∏–≤–∞—é—â–∏—Ö —Å–æ—Ä—Ç',
        description:
          '–î–æ–±–∞–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π —Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã—Ä–∞—â–∏–≤–∞—é—Ç –∫–∞–∂–¥—ã–π —Å–æ—Ä—Ç –ø–µ—Ä—Ü–∞',
        priority: 'low' as const,
        status: 'planned' as const,
        category: 'feature' as const,
        targetVersion: '1.3.0',
        notes: '–¢—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –≤ Firestore',
        estimatedEffort: 'large' as const,
      },
      {
        title: '–û–±—Ä–∞—Ç–Ω—ã–π —Ç–∞–π–º–µ—Ä –¥–æ —Å–±–æ—Ä–∞ —É—Ä–æ–∂–∞—è',
        description:
          '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —Å–±–æ—Ä–∞ —É—Ä–æ–∂–∞—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–Ω–µ–π –¥–æ —Å–æ–∑—Ä–µ–≤–∞–Ω–∏—è —Å–æ—Ä—Ç–∞',
        priority: 'low' as const,
        status: 'planned' as const,
        category: 'feature' as const,
        targetVersion: '1.3.0',
        notes: '–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–∞—Ç—É –ø–æ—Å–∞–¥–∫–∏ –≤ –º–æ–¥–µ–ª—å –ø–µ—Ä—Ü–∞',
        estimatedEffort: 'medium' as const,
      },
      {
        title: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        description:
          '–°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ —Å–æ—Ä—Ç–æ–≤',
        priority: 'medium' as const,
        status: 'completed' as const,
        category: 'feature' as const,
        targetVersion: '1.1.0',
        notes:
          '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã: –∫–Ω–æ–ø–∫–∏ –∏–º–ø–æ—Ä—Ç–∞/—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞, –∫–Ω–æ–ø–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–∞–¥ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        estimatedEffort: 'small' as const,
      },
    ];

    console.log('üìù –°–æ–∑–¥–∞–µ–º', sampleItems.length, '—ç–ª–µ–º–µ–Ω—Ç–æ–≤...');

    for (const item of sampleItems) {
      console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç:', item.title);
      const result = await addItem(item);
      if (result) {
        console.log('‚úÖ –≠–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω:', result.id);
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞:', item.title);
      }
    }

    console.log('=== –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã ===');
  };

  // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  const plannedItems = computed(() => items.value.filter((item) => item.status === 'planned'));

  const inProgressItems = computed(() =>
    items.value.filter((item) => item.status === 'in-progress'),
  );

  const completedItems = computed(() => items.value.filter((item) => item.status === 'completed'));

  const highPriorityItems = computed(() =>
    items.value.filter((item) => item.priority === 'high' || item.priority === 'critical'),
  );

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const stats = computed(() => ({
    total: items.value.length,
    planned: plannedItems.value.length,
    inProgress: inProgressItems.value.length,
    completed: completedItems.value.length,
    highPriority: highPriorityItems.value.length,
  }));

  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
  const paginatedItems = computed(() => {
    const startIndex = (currentPage.value - 1) * itemsPerPage.value;
    const endIndex = startIndex + itemsPerPage.value;
    return items.value.slice(startIndex, endIndex);
  });

  const hasNextPage = computed(() => currentPage.value < totalPages.value);
  const hasPrevPage = computed(() => currentPage.value > 1);

  // –ú–µ—Ç–æ–¥—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const goToPage = (page: number) => {
    if (page >= 1 && page <= totalPages.value) {
      currentPage.value = page;
    }
  };

  const nextPage = () => {
    if (hasNextPage.value) {
      currentPage.value++;
    }
  };

  const prevPage = () => {
    if (hasPrevPage.value) {
      currentPage.value--;
    }
  };

  const goToFirstPage = () => {
    currentPage.value = 1;
  };

  const goToLastPage = () => {
    currentPage.value = totalPages.value;
  };

  // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const reset = () => {
    // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–ª—É—à–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (unsubscribe) {
      console.log('üîÑ –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–ª—É—à–∞—Ç–µ–ª—è –ø—Ä–∏ —Å–±—Ä–æ—Å–µ');
      unsubscribe();
      unsubscribe = null;
    }

    items.value = [];
    loading.value = false;
    error.value = null;
    currentPage.value = 1; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  };

  return {
    items,
    loading,
    error,
    fetchItems,
    addItem,
    updateItem,
    deleteItem,
    createTestItem,
    createSampleItems,
    plannedItems,
    inProgressItems,
    completedItems,
    highPriorityItems,
    stats,
    debugAllItems,
    reset,
    // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    currentPage,
    itemsPerPage,
    totalPages,
    paginatedItems,
    hasNextPage,
    hasPrevPage,
    goToPage,
    nextPage,
    prevPage,
    goToFirstPage,
    goToLastPage,
  };
});
